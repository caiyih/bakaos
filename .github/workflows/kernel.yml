name: Kernel CI

on:
  push:
    branches:
      - "**"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: 'always'
  IS_CI_ENVIRONMENT: true

jobs:
  build-only:
    name: Build Only
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        architecture:
          - { triplet: riscv64gc-unknown-none-elf, fullname: riscv64 }
          - { triplet: loongarch64-unknown-none, fullname: loongarch64 }

    defaults:
      run:
        working-directory: ./kernel

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        env: 
            TOOLCHAIN_VERSION: nightly-2025-02-01
        run: |
          rustup toolchain install $TOOLCHAIN_VERSION --profile minimal
          rustup default $TOOLCHAIN_VERSION
          rustup override set $TOOLCHAIN_VERSION
          rustup target add ${{ matrix.architecture.triplet }}
          rustup component add llvm-tools

      - uses: taiki-e/cache-cargo-install-action@v2
        with:
          tool: cargo-binutils

      - uses: ./.github/workflows/actions/setup-musl

      - name: Build kernel
        run: make build LOG=TRACE ARCH=${{ matrix.architecture.fullname }}

  run:
    name: Run
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # The matrix tests runs too many flows(2 ^ 3) and always take too much CI resources
        # So we disabled 'OFF' level, because we have another workflow which uses 'OFF' level
        log_level: [TRACE]
        profile: [release, debug]
        architecture:
          - { triplet: riscv64gc-unknown-none-elf, fullname: riscv64, shortname: rv }
          - { triplet: loongarch64-unknown-none, fullname: loongarch64, shortname: la }

    defaults:
      run:
        working-directory: ./kernel

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        env: 
            TOOLCHAIN_VERSION: nightly-2025-02-01
        run: |
          rustup toolchain install $TOOLCHAIN_VERSION --profile minimal
          rustup default $TOOLCHAIN_VERSION
          rustup override set $TOOLCHAIN_VERSION
          rustup target add ${{ matrix.architecture.triplet }}
          rustup component add llvm-tools

      - uses: taiki-e/cache-cargo-install-action@v2
        with:
          tool: cargo-binutils

      - uses: ./.github/workflows/actions/setup-musl

      - name: Build kernel
        run: make build LOG=${{ matrix.log_level }} ARCH=${{ matrix.architecture.fullname }} MODE=${{ matrix.profile }}

      - uses: ./.github/workflows/actions/setup-qemu

      - name: Install dependencies (riscv64)
        if: matrix.architecture.fullname == 'riscv64'
        run: |
          sudo apt update
          sudo apt install -y binutils-riscv64-linux-gnu
          sudo cp /usr/bin/riscv64-linux-gnu-objdump /usr/bin/riscv64-elf-objdump
          riscv64-elf-objdump --version
  
      - name: Install dependencies (loongarch64)
        if: matrix.architecture.fullname == 'loongarch64'
        run: |
          TOOLCHAIN_DIR=${{ runner.temp }}/loongarch64-toolchain
          mkdir -p $TOOLCHAIN_DIR
          wget https://github.com/neuq-rcore/testsuit-binary/releases/download/la64/loongarch64-linux-gnu.tar.gz
          tar -xzf loongarch64-linux-gnu.tar.gz -C $TOOLCHAIN_DIR --strip-components=1
          echo "$TOOLCHAIN_DIR/bin" >> $GITHUB_PATH
          # $GITHUB_PATH only works for following steps
          export PATH="$TOOLCHAIN_DIR/bin:$PATH"
          loongarch64-linux-gnu-objdump --version

      - name: Download sdcard images
        run: |
          # We have to download the file at the parent directory(the root of this repository)
          wget https://github.com/oscomp/testsuits-for-oskernel/releases/download/${{ vars.TESTSUITS_TAG_VER }}/sdcard-${{ matrix.architecture.shortname }}.img.xz -P ..

      - name: Run
        timeout-minutes: 5
        continue-on-error: true
        run: make run LOG=${{ matrix.log_level }} ARCH=${{ matrix.architecture.fullname }} MODE=${{ matrix.profile }}

      - uses: actions/upload-artifact@v4
        with:
          name: output-${{ matrix.architecture.fullname }}-${{ matrix.profile }}-${{ matrix.log_level }}.log
          path: kernel/qemu_output.log
          compression-level: 9
          overwrite: true

      - uses: actions/upload-artifact@v4
        with:
          name: kernel-${{ matrix.architecture.fullname }}-${{ matrix.profile }}-${{ matrix.log_level }}
          path: kernel/target/${{ matrix.architecture.triplet }}/${{ matrix.profile }}/bakaos
          compression-level: 9
          overwrite: true
