name: Online Final test

on:
  push:
    branches:
      - "**"
  workflow_dispatch:

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: 'always'
  IS_CI_ENVIRONMENT: true

jobs:
  run:
    name: Grading
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        architecture:
          - { triplet: riscv64gc-unknown-none-elf, fullname: riscv64, shortname: rv, threshold: 0 }
          - { triplet: loongarch64-unknown-none, fullname: loongarch64, shortname: la, threshold: 0 }

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        env: 
            TOOLCHAIN_VERSION: nightly-2025-02-01
        run: |
          rustup toolchain install $TOOLCHAIN_VERSION --profile minimal
          rustup default $TOOLCHAIN_VERSION
          rustup override set $TOOLCHAIN_VERSION
          rustup target add ${{ matrix.architecture.triplet }}
          rustup component add llvm-tools

      - uses: taiki-e/cache-cargo-install-action@v2
        with:
          tool: cargo-binutils

      - uses: ./.github/workflows/actions/setup-musl

      - name: Build Kernel
        run: |
          make build-online-final ARCH=${{ matrix.architecture.fullname }}
          make _prepare_image ARCH=${{ matrix.architecture.fullname }}
      
      - uses: ./.github/workflows/actions/setup-qemu

      - name: Download sdcard images
        run: |
          wget https://github.com/neuq-rcore/testsuits-for-oskernel/releases/download/${{ vars.ONLINE_FINAl_TESTSUITS_TAG_VER }}/sdcard-${{ matrix.architecture.shortname }}.img.gz
          make _prepare_sdcard ARCH=${{ matrix.architecture.fullname }}

      - name: Run tests
        timeout-minutes: 5 # Should be enough
        run: make _test_internal ARCH=${{ matrix.architecture.fullname }}

      - uses: actions/upload-artifact@v4
        with:
          name: output-${{ matrix.architecture.fullname }}.log
          path: output.log
          if-no-files-found: error
          compression-level: 0
          overwrite: true
